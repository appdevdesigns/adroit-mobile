# Uncomment the next line to define a global platform for your project
# platform :ios, '9.0'

target 'adroit' do
  pod 'AppCenter/Crashes', '~> 1.14.0'
  pod 'AppCenter/Analytics', '~> 1.14.0'
  pod 'AppCenterReactNativeShared', '~> 1.13.0'
  # Uncomment the next line if you're using Swift or would like to use dynamic frameworks
  # use_frameworks!

  # Pods for adroit

  platform :ios, '9.0'
  pod 'React', :path => '../node_modules/react-native', :subspecs => [
    'Core',
    'CxxBridge',
    'DevSupport', # Include this to enable In-App Devmenu if RN >= 0.43
    'RCTText',
    'RCTImage',
    'RCTNetwork',
    'RCTWebSocket', # needed for debugging
    'RCTAnimation',
    # Add any other subspecs you want to use in your project
  ]
  pod 'yoga', :path => '../node_modules/react-native/ReactCommon/yoga'

  # Third party deps podspec link
  pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
  pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'

  pod 'react-native-orientation', :path => '../node_modules/react-native-orientation'

  pod 'CodePush', :path => '../node_modules/react-native-code-push'

  pod 'react-native-webview', :path => '../node_modules/react-native-webview'

  pod 'RNImageCropPicker', :path => '../node_modules/react-native-image-crop-picker'

  pod 'RNCAsyncStorage', :path => '../node_modules/@react-native-community/async-storage'

  pod 'RNGestureHandler', :path => '../node_modules/react-native-gesture-handler'

  pod 'RNVectorIcons', :path => '../node_modules/react-native-vector-icons'

  pod 'react-native-onesignal',
    :path => "../node_modules/react-native-onesignal/react-native-onesignal.podspec",
    :inhibit_warnings => true

  target 'adroitTests' do
    inherit! :search_paths
    # Pods for testing
  end

end

target 'adroit-tvOS' do
  # Uncomment the next line if you're using Swift or would like to use dynamic frameworks
  # use_frameworks!

  # Pods for adroit-tvOS

  target 'adroit-tvOSTests' do
    inherit! :search_paths
    # Pods for testing
  end

end

target 'OneSignalNotificationServiceExtension' do
  pod 'OneSignal', '>= 2.9.3', '< 3.0'
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    if target.name == "React"
      target.remove_from_project
    end
  end
end